{"seeAlsoSections":[{"title":"PropertyWrappers","identifiers":["doc:\/\/OneWay\/documentation\/OneWay\/Insensitive","doc:\/\/OneWay\/documentation\/OneWay\/Sensitive"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Heap"}],"title":"Heap","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:6OneWay4HeapV","modules":[{"name":"OneWay"}],"navigatorTitle":[{"kind":"identifier","text":"Heap"}]},"abstract":[{"type":"text","text":"A property wrapper that allows for an easy way to implement storing data in heap memory."}],"sections":[],"identifier":{"url":"doc:\/\/OneWay\/documentation\/OneWay\/Heap","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/OneWay\/s23CustomStringConvertibleP","doc:\/\/OneWay\/SQ","doc:\/\/OneWay\/SH","doc:\/\/OneWay\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/OneWay\/documentation\/OneWay"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/OneWay\/documentation\/OneWay\/Heap\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/OneWay\/documentation\/OneWay\/Heap\/wrappedValue"]},{"title":"Default Implementations","identifiers":["doc:\/\/OneWay\/documentation\/OneWay\/Heap\/CustomStringConvertible-Implementations","doc:\/\/OneWay\/documentation\/OneWay\/Heap\/Equatable-Implementations","doc:\/\/OneWay\/documentation\/OneWay\/Heap\/Hashable-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/oneway\/heap"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Heap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When applied to a field, the corresponding value will always be heap-allocated. This happens"},{"type":"text","text":" "},{"type":"text","text":"because this wrapper is a class and classes are always heap-allocated. Use of this wrapper is"},{"type":"text","text":" "},{"type":"text","text":"required on large value types because they can overflow the Swift runtime stack."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/square\/wire\/blob\/master\/wire-runtime-swift\/src\/main\/swift\/propertyWrappers\/CopyOnWrite.swift"}]}],"type":"aside","name":"See Also"}]}],"references":{"doc://OneWay/documentation/OneWay/Heap/init(wrappedValue:)":{"role":"symbol","title":"init(wrappedValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/OneWay\/documentation\/OneWay\/Heap\/init(wrappedValue:)","kind":"symbol","type":"topic","url":"\/documentation\/oneway\/heap\/init(wrappedvalue:)"},"doc://OneWay/documentation/OneWay/Heap/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/OneWay\/documentation\/OneWay\/Heap\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/oneway\/heap\/equatable-implementations"},"doc://OneWay/documentation/OneWay/Sensitive":{"role":"symbol","title":"Sensitive","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Sensitive"}],"abstract":[{"type":"text","text":"A property wrapper that makes a value behave like a different one just by assigning it, even if"},{"type":"text","text":" "},{"type":"text","text":"the same value is assigned."}],"identifier":"doc:\/\/OneWay\/documentation\/OneWay\/Sensitive","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Sensitive"}],"url":"\/documentation\/oneway\/sensitive"},"doc://OneWay/documentation/OneWay/Heap/wrappedValue":{"role":"symbol","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[],"identifier":"doc:\/\/OneWay\/documentation\/OneWay\/Heap\/wrappedValue","kind":"symbol","type":"topic","url":"\/documentation\/oneway\/heap\/wrappedvalue"},"doc://OneWay/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/OneWay\/SH"},"doc://OneWay/documentation/OneWay/Insensitive":{"role":"symbol","title":"Insensitive","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Insensitive"}],"abstract":[{"type":"text","text":"A property wrapper that acts like the same value, regardless of changes in its actual value."}],"identifier":"doc:\/\/OneWay\/documentation\/OneWay\/Insensitive","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Insensitive"}],"url":"\/documentation\/oneway\/insensitive"},"doc://OneWay/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/OneWay\/s8SendableP"},"doc://OneWay/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/OneWay\/SQ"},"doc://OneWay/documentation/OneWay/Heap":{"role":"symbol","title":"Heap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Heap"}],"abstract":[{"type":"text","text":"A property wrapper that allows for an easy way to implement storing data in heap memory."}],"identifier":"doc:\/\/OneWay\/documentation\/OneWay\/Heap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Heap"}],"url":"\/documentation\/oneway\/heap"},"doc://OneWay/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/OneWay\/s23CustomStringConvertibleP"},"doc://OneWay/documentation/OneWay/Heap/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/OneWay\/documentation\/OneWay\/Heap\/CustomStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/oneway\/heap\/customstringconvertible-implementations"},"https://github.com/square/wire/blob/master/wire-runtime-swift/src/main/swift/propertyWrappers/CopyOnWrite.swift":{"title":"CopyOnWrite.swift located in square\/wire repository","titleInlineContent":[{"type":"codeVoice","code":"CopyOnWrite.swift"},{"type":"text","text":" located in "},{"type":"codeVoice","code":"square\/wire"},{"type":"text","text":" repository"}],"type":"link","identifier":"https:\/\/github.com\/square\/wire\/blob\/master\/wire-runtime-swift\/src\/main\/swift\/propertyWrappers\/CopyOnWrite.swift","url":"https:\/\/github.com\/square\/wire\/blob\/master\/wire-runtime-swift\/src\/main\/swift\/propertyWrappers\/CopyOnWrite.swift"},"doc://OneWay/documentation/OneWay/Heap/Hashable-Implementations":{"role":"collectionGroup","title":"Hashable Implementations","abstract":[],"identifier":"doc:\/\/OneWay\/documentation\/OneWay\/Heap\/Hashable-Implementations","kind":"article","type":"topic","url":"\/documentation\/oneway\/heap\/hashable-implementations"},"doc://OneWay/documentation/OneWay":{"role":"collection","title":"OneWay","abstract":[{"type":"text","text":"A Swift library for state management with unidirectional data flow."}],"identifier":"doc:\/\/OneWay\/documentation\/OneWay","kind":"symbol","type":"topic","url":"\/documentation\/oneway"}}}